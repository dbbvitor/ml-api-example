name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:

    - uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
    - run: poetry install --no-interaction --with docs
    - run: poetry add pytest pytest-cov black flake8 isort mypy --no-interaction

    - name: Test with pytest
      run: poetry run pytest --cov src --cov-report xml

    - name: Run black linter
      run: poetry run black src --check --verbose

    - name: Run flake8 linter
      run:
        poetry run flake8 . --exclude '.*' --max-complexity=10 --ignore=E203
        --max-line-length=120 --statistics

    - name: Run isort
      run: poetry run isort --profile black --check-only .

    - name: Run mypy
      run: poetry run mypy -v --strict

    - name: Build package
      run: poetry build

    - name: Build site
      run: poetry run mkdocs build

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

    - name: Add version to environment vars
      run: |
        PROJECT_VERSION=$(poetry version --short)
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

    - name: Update tags
      uses: actions/github-script@v6
      with:
        retries: 3
        script: |
          try {
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ env.PROJECT_VERSION }}',
              sha: context.sha
            });
          } catch (e) {
            if ( e instanceof Error && e.status === 422 ) {
              console.log("Tag already exists: " + e)
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/v${{ env.PROJECT_VERSION }}',
                sha: context.sha,
                force: true
              });
            } else {
              console.log("Tag already exists: " + e);
            }
          }

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/*-${{ env.PROJECT_VERSION }}.tar.gz
